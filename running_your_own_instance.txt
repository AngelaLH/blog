This document describes what you need to do to run your own copy of the blog.

Warning: it's probably not complete and you're expected to be able to debug
problems if they arise.

1. You need to create go/config.json with the following format:

{
    "TwitterOAuthCredentials": {
        "Token":"",
        "Secret":""
    },
    "AnalyticsCode":"",
    "CookieAuthKeyHexStr":"",
    "CookieEncrKeyHexStr":"",
}

Here's what they mean and why they are there:

1.1. TwitterOAuthCredentials

This blog uses twitter to authenticate the admin (i.e. you, i.e. the user that
can create new blog posts). See handler_login.go.

To get token and secret, you need to register your blog as an app with twitter.

You also need to edit IsAdmin() in handler_login.go and change 'kjk' (which is
my twitter handle) to your twitter handle.

Alternatively, you can implement a different login system.

1.2 Analytics code is Google Analytics (UA-XXXX-Y). It's optional.

1.3. CookieAuthKeyHexStr and CookieEncrKeyHexStr are secret, but random
values used to encrypt cookies (so that they cannot be spoofed).

If empty, the code will helpfully generate values for you to put there
(see readConfig() in main.go).

2. You need to create data directory ../../data (assuming you're in go
directory).

This is where the data (blog posts etc.) is stored. Also, this is the directory
being backed up to s3.

3. You need to compile the app e.g. by running ./scripts/build.sh.
This will create go/blog_app executable which is the web server.
You can run it directly on port 80 or run on custom port and expose
it via other web server by proxying.

See scripts/nginx.conf for how I do it with nginx.
